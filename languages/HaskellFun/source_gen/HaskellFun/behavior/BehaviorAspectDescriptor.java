package HaskellFun.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myAlgebraicDataType__BehaviorDescriptor = new AlgebraicDataType__BehaviorDescriptor();
  private final BHDescriptor myConstructor__BehaviorDescriptor = new Constructor__BehaviorDescriptor();
  private final BHDescriptor myConstructorRecord__BehaviorDescriptor = new ConstructorRecord__BehaviorDescriptor();
  private final BHDescriptor myAbstractConstructor__BehaviorDescriptor = new AbstractConstructor__BehaviorDescriptor();
  private final BHDescriptor myDataType__BehaviorDescriptor = new DataType__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (index_846f5o_a0i.index(cncpt)) {
      case 0:
        return myAbstractConstructor__BehaviorDescriptor;
      case 1:
        return myAlgebraicDataType__BehaviorDescriptor;
      case 2:
        return myConstructor__BehaviorDescriptor;
      case 3:
        return myConstructorRecord__BehaviorDescriptor;
      case 4:
        return myDataType__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0i = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x70eb8650b1874f45L, 0x995803d27f5d94baL, 0x91392944917a311L), MetaIdFactory.conceptId(0x70eb8650b1874f45L, 0x995803d27f5d94baL, 0x91392944907b44dL), MetaIdFactory.conceptId(0x70eb8650b1874f45L, 0x995803d27f5d94baL, 0x91392944908132cL), MetaIdFactory.conceptId(0x70eb8650b1874f45L, 0x995803d27f5d94baL, 0x9139294490fb71dL), MetaIdFactory.conceptId(0x70eb8650b1874f45L, 0x995803d27f5d94baL, 0x9139294492326ddL)).seal();
}
